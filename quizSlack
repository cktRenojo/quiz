
 //1
function maskString(str) {
    if (str.length > 4) {
      const firstTwoLetters = str.slice(0, 2); 
      const lastTwoLetters = str.slice(-2);    
      const askterisk = '*'.repeat(str.length - 4); 
  
      return firstTwoLetters + askterisk + lastTwoLetters;
    } else {
      const firstChar = str.charAt(0);  
      const askterisk = '*'.repeat(str.length - 1); 
  
      return firstChar + askterisk;
    }
  }
  

  console.log(maskString("Username123")); 
  console.log(maskString("U229"));        
  console.log(maskString("dc3"));         
  console.log(maskString("ii"));          
  console.log(maskString("i"));         
  console.log(maskString("christopher robin"));    
  console.log(maskString("clar"));  


  //2
  function abbreviateName(fullName) {
   
    const words = fullName.split(' ');
  
   
    const initials = words.map(word => word.charAt(0).toUpperCase()).join('.');
  
    return initials;
  }
  
  
  console.log(abbreviateName('christopher robin'));                   
  console.log(abbreviateName('Albus Percival Wulfric Brian Dumbledore')); 
  console.log(abbreviateName('sybil P trelawney'));   

//3.1
  function isValidPhNumber(number) {
    const regex = /^9\d{9}$/;
    return regex.test(number);
  }
  
  
  console.log(isValidPhNumber('9165509626')); 
  console.log(isValidPhNumber('8165509626')); 
  console.log(isValidPhNumber('916550962'));  
  console.log(isValidPhNumber('9266341472')); 

  function trimSpecialCharacters(str) {
    const regex = /^[\s_.,]+|[\s_.,]+$/g;
    return str.replace(regex, '');
  }


  //3.2
  function formatDateString(dateString) {
    const regex = /^(\d{1,2})\/(\d{1,2})$/;
    const match = dateString.match(regex);
    
    if (match) {
      const month = match[1]; 
      const day = match[2];    
      return `${month}m ${day}d`;
    } else {
      return 'Invalid date format';
    }
  }
  

  console.log(formatDateString('1/1')); 

 //3.3
 function trimSpecialCharacters(str) {
    const regex = /^[\s_.,]+|[\s_.,]+$/g;
    return str.replace(regex, '');
  }
  
  console.log(trimSpecialCharacters('__ ,.1231aa,.    _ ,')); 
  console.log(trimSpecialCharacters('_ _abccc__ aaa,,_ ..')); 
  
  
//4
  const moment = require('moment');
const momentTimezone = require('moment-timezone');


function updateAndFormatTime(newTime) {

    const { year, month, day, hour, minute, second } = newTime;
    if (!year || !month || !day || !hour || !minute || !second) {
        throw new Error('All date and time components must be provided.');
    }

 
    const japanTime = moment.tz(`${year}-${month}-${day} ${hour}:${minute}:${second}`, 'YYYY-MM-DD HH:mm:ss', 'Asia/Tokyo');

    const japanTimeStringFormatted = japanTime.format('YYYY ねん MM げつ DD にち HH じ mm ふん ss びょう');


    const londonTime = japanTime.clone().tz('Europe/London');
    

    const londonTimeStringFormatted = londonTime.format('DD.MM YYYY | HH: mm: ss');

    return {
        japanTimeString: japanTimeStringFormatted,
        londonTimeString: londonTimeStringFormatted
    };
}


const updatedTime = {
    year: 2024,
    month: 09,  
    day: 17,
    hour: 15,  
    minute: 27,
    second: 38
};

const times = updateAndFormatTime(updatedTime);

console.log('Japan Time String:', times.japanTimeString); 
console.log('London Time String:', times.londonTimeString); 

  
   
